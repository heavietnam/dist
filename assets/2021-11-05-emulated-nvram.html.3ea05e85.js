import{_ as e,o as n,c as a,d as i}from"./app.f9351318.js";const t={},l=i(`<p>H\u1EA7u h\u1EBFt c\xE1c model \u0111\u1EC1u native nh\u1EADn NVRAM nh\u01B0ng \u0111\u1ED1i v\u1EDBi c\xE1c chip set X99 v\xE0 X299 series th\xEC b\u1EA1n c\u1EA7n ph\u1EA3i patch NVRAM.</p><p>\u0110\u1ED1i v\u1EDBi B360, B365, H310, H370, Z390 th\xEC b\u1EA1n c\xF3 th\u1EC3 s\u1EED d\u1EE5ng\xA0<a href="https://heavietnam.ga/2022/03/10/ssdt-recomend/" target="_blank" rel="noopener noreferrer">SSDT-PMC</a>\xA0\u0111\u1EC3 k\xEDch ho\u1EA1t \u0111\u01B0\u1EE3c NVRAM. Gen 10 th\xEC kh\xF4ng c\u1EA7n SSDT n\xE0y.</p><h2 id="cleaning-out-the-clover-gunk" tabindex="-1"><a class="header-anchor" href="#cleaning-out-the-clover-gunk" aria-hidden="true">#</a> Cleaning out the Clover gunk</h2><p>C\xF3 th\u1EC3 b\u1EA1n kh\xF4ng bi\u1EBFt nh\u01B0ng Clover c\xF3 th\xEAm c\xE1c t\u1EC7p RC v\xE0o macOC \u0111\u1EC3 m\xF4 ph\u1ECFng nvram \u0111i\u1EC1u n\xE0y s\u1EBD xung \u0111\u1ED9t v\u1EDBi ph\u01B0\u01A1ng ph\xE1p m\xF4 ph\u1ECFng c\u1EE7a OpenCore. \u0110\u1EC3 kh\xE1c ph\u1EE5c c\xE1c b\u1EA1n s\u1EBD x\xF3a c\xE1c file sau:</p><ul><li><p><code>/Volumes/EFI/EFI/CLOVER/drivers64UEFI/EmuVariableUefi-64.efi</code></p></li><li><p><code>/Volumes/EFI/nvram.plist</code></p></li><li><p><code>/etc/rc.clover.lib</code></p></li><li><p><code>/etc/rc.boot.d/10.save_and_rotate_boot_log.local</code></p></li><li><p><code>/etc/rc.boot.d/20.mount_ESP.local</code></p></li><li><p><code>/etc/rc.boot.d/70.disable_sleep_proxy_client.local.disabled</code></p></li><li><p><code>/etc/rc.shutdown.d/80.save_nvram_plist.local\u200B</code></p></li><li><p><code>/etc/rc.boot.d</code></p></li><li><p><code>/etc/rc.shutdown.d\u200B</code></p></li></ul><p>N\u1EBFu c\xE1c th\u01B0 m\u1EE5c tr\u1ED1ng c\xE1c b\u1EA1n v\u1EABn ph\u1EA3i x\xF3a ch\xFAng.</p><h2 id="kiem-tra-xem-nvram-cua-ban-co-hoat-\u0111ong-hay-khong" tabindex="-1"><a class="header-anchor" href="#kiem-tra-xem-nvram-cua-ban-co-hoat-\u0111ong-hay-khong" aria-hidden="true">#</a> Ki\u1EC3m tra xem NVRAM c\u1EE7a b\u1EA1n c\xF3 ho\u1EA1t \u0111\u1ED9ng hay kh\xF4ng</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// d\xE1n t\u1EEBng d\xF2ng code sau v\xE0o

sudo -s
nvram -c
nvram myvar=test
exit

// reboot v\xE0 ch\u1EA1y ti\u1EBFp d\xF2ng sau

nvram -p | grep -i myvar

// n\u1EBFu kh\xF4ng c\xF3 g\xEC tr\u1EA3 v\u1EC1 th\xEC nvram b\u1EA1n kh\xF4ng ho\u1EA1t \u0111\u1ED9ng. N\u1EBFu nh\u01B0 n\xF3 tr\u1EA3 v\u1EC1 1 d\xF2ng c\xF3 t\u1EEB kh\xF3a myvar test th\xEC nvram c\u1EE7a b\u1EA1n ho\u1EA1t \u0111\u1ED9ng

// l\u1EC7nh nvram -c y\xEAu c\u1EA7u t\u1EAFt sip. Tuy nhi\xEAn b\u1EA1n c\xF3 th\u1EC3 thay th\u1EBF d\xF2ng n\xE0y b\u1EB1ng c\xE1ch reset nvram \u1EDF menu boot (b\u1EADt Misc -&gt; Security -&gt; AllowNvramReset -&gt; YES)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enabling-emulated-nvram" tabindex="-1"><a class="header-anchor" href="#enabling-emulated-nvram" aria-hidden="true">#</a> Enabling emulated NVRAM</h2><p>B1:Ch\u1EC9nh config theo sau:</p><ul><li>Booter: <ul><li>DisableVariableWrite: NO</li></ul></li><li>Misc -&gt; Security: <ul><li>ExposeSensitiveData: 0x3</li></ul></li><li>NVRAM: <ul><li>LegacyEnable: YES</li><li>LegacyOverwrite: YES</li><li>LegacySchema: \u0111\u01B0\u1EE3c OpenCore set m\u1EB7c \u0111\u1ECBnh</li><li>WriteFlash: YES</li></ul></li></ul><p><img src="https://dortania.github.io/OpenCore-Post-Install/assets/img/nvram.c97ef040.png" alt=""></p><p>B\xE2y gi\u1EDD b\u1EA1n s\u1EBD ch\u1EA1y\xA0<a href="https://github.com/acidanthera/OpenCorePkg/releases" target="_blank" rel="noopener noreferrer">LogoutHook.command</a>\xA0(trong /Utilities/LogoutHook/).</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// ch\u1EA1y \u0111o\u1EA1n code sau 
sudo defaults write com.apple.loginwindow LogoutHook
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>B2: B\u1EA1n s\u1EBD k\xE9o file LogoutHook.command v\xE0o terminal v\xE0 nh\u1EA5n enter</p><p>L\u01B0u \xFD: Boot-arg\xA0<code>-x</code>\xA0y\xEAu c\u1EA7u NVRAM \u0111\u1EC3 ho\u1EA1t \u0111\u1ED9ng. v\u1EDBi nh\u1EEFng macOS 10.12- th\xEC \u0111i\u1EC1u n\xE0y s\u1EBD kh\xF4ng kh\u1EA3 d\u1EE5ng. B\u1EA1n s\u1EBD c\u1EA7n copy file\xA0<code>nvram.mojave</code>\xA0v\xE0o c\xF9ng folder v\u1EDBi\xA0<code>LogoutHook.command</code>. N\xF3 s\u1EBD g\u1ECDi nvram.mojave thay v\xEC g\u1ECDi NVRAM h\u1EC7 th\u1ED1ng.</p><p><strong>Source:\xA0<a href="https://dortania.github.io/OpenCore-Post-Install/misc/nvram.html#enabling-emulated-nvram-with-a-nvram-plist" target="_blank" rel="noopener noreferrer">Emulated NVRAM | OpenCore Post-Install (dortania.github.io)</a></strong></p>`,17),o=[l];function c(r,d){return n(),a("div",null,o)}var h=e(t,[["render",c],["__file","2021-11-05-emulated-nvram.html.vue"]]);export{h as default};
